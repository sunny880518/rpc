"use strict";const zeromq = require('zmq'),	idGenerator = require('../utils/idGenerator');const ZmqPub = function(host, port){	this.host = host;	this.port = port;	this.url = `tcp://${host}:${port}`;	this.socket = zeromq.socket('pub') || null;	this.flushIdentityId();};ZmqPub.prototype.flushIdentityId = function(){	this.identity_id = idGenerator.getIdentityId('PUB_SUB');	return this.identity_id;};ZmqPub.prototype.run = function(cb) {	let self = this;	if(!self.socket){		console.error('can not find socket!');		return cb('not socket');	}	if(self.socket._zmq.state == 1){		return cb();	}	self.socket.bind(self.url, function(error){		if(error){			// console.error('zmqPub run get error', error);			return cb('bind error');		}		console.log('zmq publisher running.....');		return cb();	})};ZmqPub.prototype.send = function(channel, msg) {	let self = this;	if(!self.socket){		console.error('can not find socket!');		return;	}	// TODO: need deal	let sendObj = {		identity_id: self.identity_id,		msg_id: idGenerator.getMsgId(),		msg: msg	};	self.socket.send(channel + '-' + JSON.stringify(sendObj));};ZmqPub.prototype.stop = function() {	let self = this;	if(self.socket._zmq.state == 1){		self.socket.close();	}};module.exports = ZmqPub;